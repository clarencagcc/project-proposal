---
title: "pm25_population"
format: html
editor: visual
---

# Import library

```{r}
library(tidyverse)
library(plotly)

```

# Load data

```{r}
final_data <- read.csv("final.csv")

variable.names(final_data)

```

# Data processing

```{r}

final_data <- final_data |>
  select(who_region, who_country_name, city_or_locality, measurement_year, pm2_5, population) |>
  mutate(population_in_million = population / 1000000) |>
  mutate(pm2_5 = round(pm2_5, 2)) |>
  drop_na()

```

# Scatter plot of PM2.5 vs population

```{r}
# Improved function to create trend line data with LOESS
create_trend_line <- function(x, y) {
  valid <- !is.na(x) & !is.na(y)
  x <- x[valid]
  y <- y[valid]
  order <- order(x)
  x <- x[order]
  y <- y[order]
  loess_fit <- loess(y ~ x, span = 0.75)
  new_x <- seq(min(x), max(x), length.out = 100)
  new_y <- predict(loess_fit, newdata = data.frame(x = new_x))
  new_y <- pmax(0, new_y)
  return(list(x = new_x, y = new_y))
}

# Create initial trend line for 2017
trend_2017 <- create_trend_line(final_data$population_in_million[final_data$measurement_year == 2017], 
                                final_data$pm2_5[final_data$measurement_year == 2017])

# Get unique regions
regions <- unique(final_data$who_region)

# Create the plot
fig <- plot_ly()

# Add traces for each region
for (region in regions) {
  fig <- fig %>%
    add_trace(data = final_data[final_data$measurement_year == 2017 & final_data$who_region == region, ],
              x = ~population_in_million, 
              y = ~pm2_5, 
              text = ~paste("Country:", who_country_name, 
                            "<br>Population:", round(population_in_million, 2), "million",
                            "<br>Region:", who_region,
                            "<br>Year:", measurement_year,
                            "<br>PM2.5:", round(pm2_5, 2)),
              type = "scatter",
              mode = "markers",
              marker = list(size = 10, opacity = 0.7),
              name = region,
              legendgroup = region)
}

# Add trend line
fig <- fig %>%
  add_trace(x = trend_2017$x, 
            y = trend_2017$y, 
            type = "scatter", 
            mode = "lines", 
            line = list(color = "black", width = 3),
            name = "Trend Line")

# Layout
fig <- fig %>%
  layout(title = "Population vs PM2.5 (2017)",
         xaxis = list(title = "Population (in millions)", type = "log"),
         yaxis = list(title = "PM2.5", rangemode = "tozero"),
         updatemenus = list(
           list(
             buttons = list(
               list(method = "update",
                    args = list(list(
                      visible = c(rep(TRUE, length(regions) + 1)),
                      x = c(lapply(regions, function(r) final_data$population_in_million[final_data$measurement_year == 2017 & final_data$who_region == r]), list(trend_2017$x)),
                      y = c(lapply(regions, function(r) final_data$pm2_5[final_data$measurement_year == 2017 & final_data$who_region == r]), list(trend_2017$y)),
                      text = c(lapply(regions, function(r) paste("Country:", final_data$who_country_name[final_data$measurement_year == 2017 & final_data$who_region == r], 
                                                                 "<br>Population:", round(final_data$population_in_million[final_data$measurement_year == 2017 & final_data$who_region == r], 2), "million",
                                                                 "<br>Region:", r,
                                                                 "<br>Year:", final_data$measurement_year[final_data$measurement_year == 2017 & final_data$who_region == r],
                                                                 "<br>PM2.5:", round(final_data$pm2_5[final_data$measurement_year == 2017 & final_data$who_region == r], 2))), list(NULL))
                    ),
                    list(title = "Population vs PM2.5 (2017)")),
                    label = "2017"),
               list(method = "update",
                    args = list(list(
                      visible = c(rep(TRUE, length(regions) + 1)),
                      x = c(lapply(regions, function(r) final_data$population_in_million[final_data$measurement_year == 2018 & final_data$who_region == r]), 
                            list(create_trend_line(final_data$population_in_million[final_data$measurement_year == 2018], final_data$pm2_5[final_data$measurement_year == 2018])$x)),
                      y = c(lapply(regions, function(r) final_data$pm2_5[final_data$measurement_year == 2018 & final_data$who_region == r]), 
                            list(create_trend_line(final_data$population_in_million[final_data$measurement_year == 2018], final_data$pm2_5[final_data$measurement_year == 2018])$y)),
                      text = c(lapply(regions, function(r) paste("Country:", final_data$who_country_name[final_data$measurement_year == 2018 & final_data$who_region == r], 
                                                                 "<br>Population:", round(final_data$population_in_million[final_data$measurement_year == 2018 & final_data$who_region == r], 2), "million",
                                                                 "<br>Region:", r,
                                                                 "<br>Year:", final_data$measurement_year[final_data$measurement_year == 2018 & final_data$who_region == r],
                                                                 "<br>PM2.5:", round(final_data$pm2_5[final_data$measurement_year == 2018 & final_data$who_region == r], 2))), list(NULL))
                    ),
                    list(title = "Population vs PM2.5 (2018)")),
                    label = "2018"),
               list(method = "update",
                    args = list(list(
                      visible = c(rep(TRUE, length(regions) + 1)),
                      x = c(lapply(regions, function(r) final_data$population_in_million[final_data$measurement_year == 2019 & final_data$who_region == r]), 
                            list(create_trend_line(final_data$population_in_million[final_data$measurement_year == 2019], final_data$pm2_5[final_data$measurement_year == 2019])$x)),
                      y = c(lapply(regions, function(r) final_data$pm2_5[final_data$measurement_year == 2019 & final_data$who_region == r]), 
                            list(create_trend_line(final_data$population_in_million[final_data$measurement_year == 2019], final_data$pm2_5[final_data$measurement_year == 2019])$y)),
                      text = c(lapply(regions, function(r) paste("Country:", final_data$who_country_name[final_data$measurement_year == 2019 & final_data$who_region == r], 
                                                                 "<br>Population:", round(final_data$population_in_million[final_data$measurement_year == 2019 & final_data$who_region == r], 2), "million",
                                                                 "<br>Region:", r,
                                                                 "<br>Year:", final_data$measurement_year[final_data$measurement_year == 2019 & final_data$who_region == r],
                                                                 "<br>PM2.5:", round(final_data$pm2_5[final_data$measurement_year == 2019 & final_data$who_region == r], 2))), list(NULL))
                    ),
                    list(title = "Population vs PM2.5 (2019)")),
                    label = "2019")
             )
           )
         ))

# Display the plot
fig
```
